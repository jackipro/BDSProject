@model WebApplication3.Models.Property

@{
	ViewBag.Title = "Edit";
	Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h1 style="text-align:center;margin: 60px; font-weight:bold; color: #2424FF">Chỉnh sửa Bất Động Sản </h1>
<p style="margin-left:70px" >Đây là bất động sản mà bạn muốn cập nhật, hãy chỉnh sửa và nhấn cập nhật để save</p>

<div class="full-contract">
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>Chỉnh sửa </h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.ID)

			<div class="form-group">
				@Html.LabelFor(model => model.PropertyCode, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PropertyCode, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.PropertyCode, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PropertyTypeID, "PropertyTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("PropertyTypeID", new SelectList(ViewBag.property_type, "ID", "PropertyTypeName", Model.PropertyTypeID))
					@Html.ValidationMessageFor(model => model.Property_Type)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DistrictID, "DistrictID", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("DistrictID", new SelectList(ViewBag.district, "ID", "DistrictName", Model.DistrictID))
					@Html.ValidationMessageFor(model => model.District)
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.BedRoom, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.BedRoom, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.BedRoom, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.BathRoom, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.BathRoom, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.BathRoom, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.InstallmentRate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.InstallmentRate, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.InstallmentRate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Album, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Album, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Album, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PropertyStatusID, "PropertyStatusID", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("PropertyStatusID", new SelectList(ViewBag.status, "ID", "PropertyStatusName", Model.PropertyStatusID))
					@Html.ValidationMessageFor(model => model.PropertyStatusID)
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

</div>

